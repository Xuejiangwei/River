模板 <类型 子>
类 列表
{
    数据
    {
        私
        {
            //子* 开始地址
            // 子* 结束地址
            // 子* 容器结束地址
            子[] 列表数组
            正长整数 长度
            正长整数 容量
        }
    }

    函数
    {
        公
        {
            列表()
            {
                长度 = 0
                容量 = 2
                列表数组 = 生成 子[容量]
            }

            正长整数 获得长度()
            {
                长度++
                返 长度
                //返 结束地址 - 开始地址
            }

            空 添加(子 值)
            {
                // 若(结束地址 < 容器结束地址)
                // {
                //     *结束地址 = 值
                //     ++结束地址
                // }
                // 否则
                // {
                //     长整数 长度 = 获得长度()
                //     长整数 新长度 = 长度 * 2
                //     若 (新长度 == 0)
                //     {
                //         新长度 = 1
                //     }

                //     子* 临时地址 = 生成 子[新长度]
                //     若 (长度 > 0)
                //     {
                //         长整数 字节长度 = (字节*)结束地址 - (字节*)开始地址
                //         内存复制(临时地址, 开始地址, 字节长度)
                //     }

                //     开始地址 = 临时地址
                //     结束地址 = 开始地址 + 长度
                //     容器结束地址 = 开始地址 + 新长度

                //     添加(值)
                // }

                若 (长度 >= 容量)
                {
                    正长整数 新容量 = 容量 * 2   
                    若 (新容量 == 0)
                    {
                        新容量 = 2
                    }

                    子[] 新列表数组 = 生成 子[新容量]
                    
                    若 (容量 > 0)
                    {
                        //字节数(子)
                        内存复制(新列表数组, 列表数组, 长度 * 8)
                    }
                    
                    容量 = 新容量
                    列表数组 = 新列表数组
                    列表数组[长度] = 值
                    长度++
                }
                否则
                {
                    列表数组[长度] = 值
                    长度++
                }
            }

            子 获得(整数 索引)
            {
                返 列表数组[索引]
                //返 *(开始地址 + 索引)
            }
        }
    }
}
