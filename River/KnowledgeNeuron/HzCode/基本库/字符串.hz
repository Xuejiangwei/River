类 字符串
{
    数据
    {
        私
        {
            字符[] 字符串数组
            正长整数 长度
            正长整数 容量
        }
    }

    函数
    {
        公
        {
            字符串(字符* 字符文本)
            {
                长度 = 获得字符个数(字符文本)
                容量 = 长度 + 1
                字符串数组 = 生成 字符[容量]

                字符串数组[长度] = 0
                
                内存复制(&字符串数组, 字符文本, 长度 * 字节数(字符))
            }

            正长整数 获得长度()
            {
                返 长度
            }

            字符* 获得字符地址()
            {
                返 &字符串数组
            }

            字符 获得(整数 索引)
            {
                返 字符串数组[索引]
            }

            空 添加(字符* 甲)
            {
                正长整数 长度甲 = 获得字符个数(甲)
                正长整数 新长度 = 长度 + 长度甲
                若 (新长度 + 1 <= 容量)
                {
                    字符串数组[新长度] = 0
                    内存复制(&字符串数组[长度], 甲, 长度甲 * 字节数(字符))
                }
                否则
                {
                    容量 = 新长度 + 1
                    字符[] 新字符串数组 = 生成 字符[容量]

                    新字符串数组[新长度] = 0
                    内存复制(&新字符串数组, &字符串数组, 长度 * 字节数(字符))
                    内存复制(&新字符串数组[长度], 甲, 长度甲 * 字节数(字符))

                    字符串数组 = 新字符串数组
                }
                
                长度 = 新长度
            }
        }
    }
}
