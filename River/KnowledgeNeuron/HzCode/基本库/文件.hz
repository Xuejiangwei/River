枚举 文件操作方式 : 整数
{
    只读 = 0
    读写 = 只读 + 1
    只写 = 10
    只写贰
    追加 = 20
    追加贰 = 21
}

类 文件
{
    数据
    {
        私
        {
            空* 文件指针 = 空指针
        }
    }

    函数
    {
        公
        {
            //要求是utf-8格式
            //0     读取文件
            //1     读写文件，文件必须存在
            //10    写入空文件，若存在，则内容清空
            //11    读写文件，文件必须存在，若存在，则内容清空
            //20    在末尾打开写入文件，在写入之前不移除EOF标记，文件不存在则创建
            //21    在末尾打开写入文件，在写入之前移除EOF标记，写入后EOF标记不会还原，文件不存在则创建
            文件(字符* 文件路径, 文件操作方式 操作方式)
            {
                文件指针 = 打开文件(文件路径, 10)
            }

            空 关闭()
            {
                关闭文件(文件指针)
            }

            整数 读取字符()
            {
                返 读取字符(文件指针)
            }

            空 读取字符串(字符* 字符地址)
            {
                读取字符串(文件指针, 14, 字符地址)
                读取字符串(文件指针, 3, 字符地址)
            }

            空 写入字符(字符 甲)
            {
                写入字符(文件指针, 甲)
            }

            空 写入字符串(字符* 甲)
            {
                写入字符串(文件指针, 甲)
            }

            // 字节 读取字节()
            // {
            //     返 读取字节(文件指针)
            // }

            // 字符 读取所有字符()
            // {
            //     返 读取字符(文件指针)
            // }
        }
    }
}